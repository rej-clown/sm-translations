name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        sourcemod-version: [1.11-dev]
        include:
          - os: ubuntu-latest
            target-archs: x86,x86_64

          - os: windows-latest
            target-archs: x86,x86_64

    steps:
      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -yq --no-install-recommends g++-multilib

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: extension

      - name: Checkout SourceMod
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sourcemod-version }}
          path: sourcemod
          submodules: recursive

      - name: Checkout AMBuild
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild

      - name: Build
        working-directory: extension
        shell: bash
        run: |
          echo ${{ github.run_number }}
          mkdir build && cd build
          python ../configure.py --enable-optimize --targets=${{ matrix.target-archs }}
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: extension/build/package


  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Package
        run: |
          version=`echo $GITHUB_REF | sed "s/refs\/tags\///"`
          7z a ex-translations-${version}.${{ github.run_number }}-linux.zip ./Linux/*
          7z a ex-translations-${version}.${{ github.run_number }}-windows.zip ./Windows/*

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.zip'
          tag: ${{ github.ref }}
          file_glob: true